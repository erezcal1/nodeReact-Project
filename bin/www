require("dotenv").config();
const logger = require("../config/winstone");
const app = require("../app");
const debug = require("debug")("nodereact-project:server");
const http = require("http");
const chalk = require("chalk");
const connectToDB = require("./connectToDB");
let server;

const port = normalizePort(process.env.PORT || "3001");
app.set("port", port);

connectToDB
  .then(() => {
    console.log(chalk.blueBright("connect to db"));
    server = http.createServer(app);
    server.listen(port);
    server.on("error", onError);
    server.on("listening", onListening);
    logger.info("connect to DB");
  })
  .catch((e) => {
    // console.log(e);
    logger.fetal(`can't connect to DB ${e}`);
    process.exit(1);
  });

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  var bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  switch (error.code) {
    case "EACCES":
      // console.error(bind + " requires elevated privileges");
      logger.fetal(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      // console.error(bind + " is already in use");
      logger.fetal(bind + " requires elevated privileges");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  // console.log("Listening on " + chalk.bgBlue.bold(bind));
  logger.info("Listening on " + bind);
  debug("Listening on " + bind);
}
